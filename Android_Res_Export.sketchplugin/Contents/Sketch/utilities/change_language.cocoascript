/*----------------------------------------------------------

Android Res Export
https://github.com/Ashung/Android_Res_Export

Copyright 2017 Ashung Hung (Ashung.hung@gmail.com)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------*/

@import "../lib/common.js";

var onRun = function(context) {

    var doc = context.document;

    var supportLanguages = {
        "en": "English",
        "zh_cn": "简体中文"
    };
    var supportLanguagesKeys = Object.keys(supportLanguages);
    var supportLanguagesValues = [];
    for (var key in supportLanguages) {
        supportLanguagesValues.push(supportLanguages[""+key+""]);
    }

    // Dialog

    var dialog = COSAlertWindow.new();
    dialog.setMessageText(localizedString(context, "change_language"));
    dialog.addButtonWithTitle(localizedString(context, "ok"));
    dialog.addButtonWithTitle(localizedString(context, "cancel"));

    var iconPath = context.plugin.urlForResourceNamed("icon.png").path();
    var iconNSImage = NSImage.alloc().initWithContentsOfFile(iconPath);
    dialog.setIcon(iconNSImage);

    var accessory = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 240, 28));
    accessory.addItemsWithObjectValues(supportLanguagesValues);
    accessory.selectItemAtIndex(0);
    dialog.setAccessoryView(accessory);

    // Click OK button
    var responseCode = dialog.runModal();
    var languageIndex = accessory.indexOfSelectedItem();
    var languageFileURL = context.plugin.urlForResourceNamed("manifest_" + supportLanguagesKeys[languageIndex] + ".json");
    if (responseCode == 1000) {

        if (fileExists(languageFileURL.path())) {

            var manifestFilePath = context.plugin.url().path() + "/Contents/Sketch/manifest.json";
            var languageFilePath = languageFileURL.path();

            // Remove manifest.json
            NSFileManager.defaultManager().removeItemAtPath_error_(
                manifestFilePath, nil
            );

            // Replace manifest.json
            NSFileManager.defaultManager().copyItemAtPath_toPath_error_(
                languageFilePath, manifestFilePath, nil
            );

            // User Default
            setPreferences(context, "language", supportLanguagesKeys[languageIndex]);

            // Reload Plugin
            AppController.sharedInstance().pluginManager().reloadPlugins();

            ga(context, "Setting", "language", "Setting", supportLanguagesKeys[languageIndex]);

        } else {

            var app = NSApplication.sharedApplication();
            app.displayDialog_withTitle_(
                localizedString(context, "language_file_not_found_desc", context.plugin.url().path() + "/Contents/Resources/manifest_" + supportLanguagesKeys[languageIndex] + ".json"),
                localizedString(context, "language_file_not_found")
            );

        }

    }

}
