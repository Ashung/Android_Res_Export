//
// Android Res Export
// Homepage: https://github.com/Ashung/Android_Res_Export
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com
// License: https://creativecommons.org/licenses/by-sa/4.0

@import "../lib/common.js";

var onRun = function(context) {

    var doc = context.document;

    var supportLanguages = {
        "en": "English",
        "zh_cn": "简体中文"
    };
    var supportLanguagesKeys = Object.keys(supportLanguages);
    var supportLanguagesValues = [];
    for (var key in supportLanguages) {
        supportLanguagesValues.push(supportLanguages[""+key+""]);
    }

    // Dialog
    var accessory = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 240, 28));
    accessory.addItemsWithObjectValues(supportLanguagesValues);
    accessory.selectItemAtIndex(0);
    var alert = NSAlert.alloc().init();
    alert.setMessageText(localizedString(context, "change_language"));
    alert.addButtonWithTitle(localizedString(context, "ok"));
    alert.addButtonWithTitle(localizedString(context, "cancel"));
    alert.setAccessoryView(accessory);

    // Click OK button
    var responseCode = alert.runModal();
    var languageIndex = accessory.indexOfSelectedItem();
    var languageFileURL = context.plugin.urlForResourceNamed("manifest_" + supportLanguagesKeys[languageIndex] + ".json");
    if (responseCode == 1000) {

        if (fileExists(languageFileURL.path())) {

            var manifestFilePath = context.plugin.url().path() + "/Contents/Sketch/manifest.json";
            var languageFilePath = languageFileURL.path();

            // Remove manifest.json
            NSFileManager.defaultManager().removeItemAtPath_error_(
                manifestFilePath, nil
            );

            // Replace manifest.json
            NSFileManager.defaultManager().copyItemAtPath_toPath_error_(
                languageFilePath, manifestFilePath, nil
            );

            // User Default
            setPreferences(context, "language", supportLanguagesKeys[languageIndex]);

            // Reload Plugin
            AppController.sharedInstance().pluginManager().reloadPlugins();

            ga("Setting", "language", "Setting", supportLanguagesKeys[languageIndex]);

        } else {

            var app = NSApplication.sharedApplication();
            app.displayDialog_withTitle_(
                localizedString(context, "language_file_not_found_desc", context.plugin.url().path() + "/Contents/Resources/manifest_" + supportLanguagesKeys[languageIndex] + ".json"),
                localizedString(context, "language_file_not_found")
            );

        }

    }

}
