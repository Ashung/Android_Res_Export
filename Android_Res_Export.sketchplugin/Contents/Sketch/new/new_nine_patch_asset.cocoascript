/*----------------------------------------------------------

Android Res Export
https://github.com/Ashung/Android_Res_Export

Copyright 2017 Ashung Hung (Ashung.hung@gmail.com)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----------------------------------------------------------*/

@import "../lib/common.js";

var onRun = function(context) {

    var sketch = context.api();
    var doc = context.document;
    var selection = context.selection;
    var selectionCount = selection.count();

    if (selectionCount == 0) {
        toast(context, localizedString(context, "no_selection"));
        return;
    } else {
        var loopSelection = selection.objectEnumerator();
        var item;
        while (item = loopSelection.nextObject()) {
            if (item.class() == "MSArtboardGroup" || item.class() == "MSSymbolMaster") {
                toast(context, localizedString(context, "can_not_create_nine_patch_from_artboard_or_symbol_master"));
                return;
            }
        }
    }

    // Asset name
    var name = ask(context, localizedString(context, "asset_name_for_nine_path"), selection.firstObject().name());

    if (name) {

        // Group content
        if (selectionCount == 1 && selection.firstObject().class() == "MSLayerGroup") {
            var group = selection.firstObject();
            // No cotent and patch group
            if (group.layerWithID("content")) {
                var groupNinePatch = group;
                var groupContent = group.layerWithID("content");
            } else {
                var groupContent = group;
                groupContent.setName("content");
                // Group nine patch
                var groupNinePatch = groupFromLayers([groupContent]);
                groupNinePatch.setName(androidResName(name));
            }
        } else {
            var groupContent = groupFromSelection(context);
            groupContent.setName("content");
            // Group nine patch
            var groupNinePatch = groupFromLayers([groupContent]);
            groupNinePatch.setName(androidResName(name));
        }

        if (!groupContent.layerWithID("#9patch")) {
            var slice = addSliceInToGroup(groupContent, "#9patch", true);
        } else {
            if (groupContent.layerWithID("#9patch").class() != "MSSliceLayer") {
                var slice = addSliceInToGroup(groupContent, "#9patch", true);
            }
        }

        if (groupNinePatch.layerWithID("patch")) {
            slice.absoluteRect().setRect(
                CGRectMake(
                    groupNinePatch.absoluteRect().x() + 1,
                    groupNinePatch.absoluteRect().y() + 1,
                    groupNinePatch.absoluteRect().width() - 2,
                    groupNinePatch.absoluteRect().height() - 2
                )
            );
        } else {
            // Add patch lines
            var width = groupContent.frame().width();
            var height = groupContent.frame().height();
            var color = "#000000";
            var patchLeft = addRectShape(groupNinePatch, null, -1, 0, 1, height, color, "left");
            var patchBottom = addRectShape(groupNinePatch, null, 0, height, width, 1, color, "bottom");
            var patchRight = addRectShape(groupNinePatch, null, width, 0, 1, height, color, "right");
            var patchTop = addRectShape(groupNinePatch, null, 0, -1, width, 1, color, "top");
            // Group patch line
            var groupPatch = groupFromLayers([patchLeft, patchBottom, patchRight, patchTop]);
            groupPatch.setName("patch");
        }

        // Select layerGroup
        // Fix Sketch 45
        if (sketch.build < 43475) {
            groupNinePatch.select_byExpandingSelection(true, false);
        } else {
            groupNinePatch.select_byExtendingSelection(true, false);
        }

        groupNinePatch.resizeToFitChildrenWithOption(1);

    }

    ga(context, "New", "new_nine_patch");

}
