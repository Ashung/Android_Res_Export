@import "../lib/common.js";

var onRun = function(context) {

    ga(context, "New", "new_nine_patch");

    var doc = context.document;
    var selection = context.selection;
    var selectionCount = selection.count();

    if (selectionCount == 0) {
        toast(context, localizedString(context, "no_selection"));
        return;
    }

    var predicate = NSPredicate.predicateWithFormat('className == "MSArtboardGroup" || className == "MSSymbolMaster"');
    if (selection.filteredArrayUsingPredicate(predicate).count() > 0) {
        toast(context, localizedString(context, "can_not_create_nine_patch_from_artboard_or_symbol_master"));
        return;
    }

    // Asset name
    // TODO: name setting
    var name = androidResName(selection.firstObject().name());

    // Group content
    if (selectionCount == 1 && selection.firstObject().class() == "MSLayerGroup") {
        var group = selection.firstObject();
        // No cotent and patch group
        if (getLayerWithNameFromParent("content", group)) {
            var groupNinePatch = group;
            var groupContent = getLayerWithNameFromParent("content", group);
        } else {
            var groupContent = group;
            groupContent.setName("content");
            // Group nine patch
            var groupNinePatch = groupFromLayers([groupContent]);
            groupNinePatch.setName(androidResName(name));
        }
    } else {
        var groupContent = groupFromSelection(context);
        groupContent.setName("content");
        // Group nine patch
        var groupNinePatch = groupFromLayers([groupContent]);
        groupNinePatch.setName(androidResName(name));
    }

    if (!getLayerWithNameFromParent("#9patch", groupContent)) {
        var slice = addSliceInToGroup(groupContent, "#9patch", "png", true);
    } else {
        if (getLayerWithNameFromParent("#9patch", groupContent).class() != "MSSliceLayer") {
            var slice = addSliceInToGroup(groupContent, "#9patch", "png", true);
        }
    }

    if (getLayerWithNameFromParent("patch", groupNinePatch)) {
        slice.absoluteRect().setRect(
            CGRectMake(
                groupNinePatch.absoluteRect().x() + 1,
                groupNinePatch.absoluteRect().y() + 1,
                groupNinePatch.absoluteRect().width() - 2,
                groupNinePatch.absoluteRect().height() - 2
            )
        );
    } else {
        // Add patch lines
        var width = groupContent.frame().width();
        var height = groupContent.frame().height();
        var color = "#000000";
        var patchLeft = addRectShape(groupNinePatch, null, -1, 0, 1, height, color, "left");
        var patchBottom = addRectShape(groupNinePatch, null, 0, height, width, 1, color, "bottom");
        var patchRight = addRectShape(groupNinePatch, null, width, 0, 1, height, color, "right");
        var patchTop = addRectShape(groupNinePatch, null, 0, -1, width, 1, color, "top");
        // Group patch line
        var groupPatch = groupFromLayers([patchBottom, patchRight, patchTop, patchLeft]);
        groupPatch.setName("patch");
    }

    // Select layerGroup
    groupNinePatch.select_byExtendingSelection(true, false);

    groupNinePatch.resizeToFitChildrenWithOption(1);

    groupNinePatch.setLayerListExpandedType(2);



}
