//
// Android Res Export
// Homepage: https://github.com/Ashung/Android_Res_Export
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com
// License: https://creativecommons.org/licenses/by-sa/4.0

@import "../lib/common.js";

var onRun = function(context) {

    if (!which("convert")) {
        alert(
            localizedString(context, "install_imagemagick_title"),
            localizedString(context, "install_imagemagick_message")
        );
        return;
    }

    var doc = context.document;
    var selection = context.selection;

    var exportNinePaths = NSMutableArray.alloc().init();

    if (selection.count() > 0) {
        var loopSelection = selection.objectEnumerator();
        var layer;
        while (layer = loopSelection.nextObject()) {
            if (layer.class() == "MSSliceLayer" && layer.name() == "#9patch") {
                if (isNinePatchLayerGroup(layer)) {
                    exportNinePaths.addObject({
                        "path": layer.parentGroup().parentGroup().layerWithID("patch"),
                        "content": layer,
                        "name": androidResName(layer.parentGroup().parentGroup().name()),
                        "width": layer.frame().width(),
                        "height": layer.frame().height()
                    });
                }
            }
            if (layer.class() == "MSLayerGroup" || layer.class() == "MSArtboardGroup" || layer.class() == "MSSymbolMaster") {
                var loopChildren = layer.children().objectEnumerator();
                var child;
                while (child = loopChildren.nextObject()) {
                    if (child.class() == "MSSliceLayer" && child.name() == "#9patch") {
                        if (isNinePatchLayerGroup(child)) {
                            exportNinePaths.addObject({
                                "path": child.parentGroup().parentGroup().layerWithID("patch"),
                                "content": child,
                                "name": androidResName(child.parentGroup().parentGroup().name()),
                                "width": child.frame().width(),
                                "height": child.frame().height()
                            });
                        }
                    }
                }
            }
        }
    } else {
        var loopAllExportableLayers = doc.allExportableLayers().objectEnumerator();
        var layer;
        while (layer = loopAllExportableLayers.nextObject()) {
            if (layer.class() == "MSSliceLayer" && layer.name() == "#9patch") {
                if (isNinePatchLayerGroup(layer)) {
                    exportNinePaths.addObject({
                        "path": layer.parentGroup().parentGroup().layerWithID("patch"),
                        "content": layer,
                        "name": androidResName(layer.parentGroup().parentGroup().name()),
                        "width": layer.frame().width(),
                        "height": layer.frame().height()
                    });
                }
            }
        }
    }

    // log(exportNinePaths);

    if (exportNinePaths.count() > 0) {

        var exportFolder = chooseFolder();

        if (exportFolder) {

            var loopExportNinePaths = exportNinePaths.objectEnumerator();
            var ninePatch;
            while (ninePatch = loopExportNinePaths.nextObject()) {

                var ninePatchContent = ninePatch.content,
                    ninePatchContentID = ninePatch.content.objectID(),
                    ninePatchPatch = ninePatch.path,
                    ninePatchPatchID = ninePatch.path.objectID(),
                    ninePatchName = ninePatch.name,
                    ninePatchWidth = ninePatch.width,
                    ninePatchHeight = ninePatch.height;

                var exportConfig = getExportConfigFromPageName(ninePatchContent.parentPage().name());

                // Export nine-patch patch lines at mdpi
                var exportOptionForPatch = ninePatchPatch.exportOptions().addExportFormat();
                    exportOptionForPatch.setScale(1);
                    exportOptionForPatch.setFileFormat("png");
                var exportRequestForPatch = MSExportRequest.exportRequestsFromExportableLayer(ninePatchPatch).firstObject();
                doc.saveArtboardOrSlice_toFile(exportRequestForPatch, exportFolder + "/" + ninePatchPatchID + ".png");
                ninePatchPatch.exportOptions().removeAllExportFormats();

                createMdpiPatchLines(
                    exportFolder,
                    ninePatchWidth,
                    ninePatchHeight,
                    ninePatchPatchID,
                    function(success, message) {
                        if (success == true) {
                            rm(exportFolder + "/" + ninePatchPatchID + ".png");
                        }
                    }
                );

                // Export nine-patch content
                var tempSlice = ninePatchContent.duplicate();
                for (var i = 0; i < exportConfig.length; i++) {

                    var scale = exportConfig[i]["scale"];
                    var qualifier = exportConfig[i]["qualifier"];

                    tempSlice.exportOptions().removeAllExportFormats();
                    var exportOptionForContent = tempSlice.exportOptions().addExportFormat();
                        exportOptionForContent.setFileFormat("png");
                        exportOptionForContent.setScale(scale);
                    var exportRequestForContent = MSExportRequest.exportRequestsFromExportableLayer(tempSlice).firstObject();
                    doc.saveArtboardOrSlice_toFile(exportRequestForContent, exportFolder + "/" + ninePatchContentID + ".png");

                    createNinePath(
                        exportFolder,
                        scale,
                        "",
                        ninePatchWidth,
                        ninePatchHeight,
                        ninePatchContentID,
                        ninePatchPatchID,
                        function(success, message) {
                            if (success == true) {
                                mkdir(exportFolder + "/res/drawable-" + qualifier);
                                rm(exportFolder + "/" + ninePatchContentID + ".png");
                                mv(
                                    exportFolder + "/" + ninePatchContentID + "_temp.png",
                                    exportFolder + "/res/drawable-" + qualifier + "/" + ninePatchName + ".9.png"
                                );
                            }
                        }
                    );
                }
                tempSlice.removeFromParent();

                // Remove nine-patch patch lines
                rm(exportFolder + "/" + ninePatchPatchID + "_top.png");
                rm(exportFolder + "/" + ninePatchPatchID + "_right.png");
                rm(exportFolder + "/" + ninePatchPatchID + "_bottom.png");
                rm(exportFolder + "/" + ninePatchPatchID + "_left.png");

            }

            openInFinder(exportFolder);

        }

    } else {
        toast(context, localizedString(context, "no_png_asset"));
    }

}

function isNinePatchLayerGroup(sliceLayer) {
    var result = false;
    if(sliceLayer.parentGroup().parentGroup().class() != "MSPage") {
        var root = sliceLayer.parentGroup().parentGroup();
        if(
            (root.layers().indexOfObject(root.layerWithID("patch")) < root.layers().count()) &&
            sliceLayer.parentGroup().name() == "content"
        ) {
            result = true;
        }
    }
    return result;
}
