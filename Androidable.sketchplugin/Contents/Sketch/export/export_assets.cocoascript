//
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com

@import "../lib/common.js";

var onRun = function(context) {

    if (!getFilePath(context)) {
        return;
    }

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    var currentFile = getFilePath(context);
    // Export folder: <file name>-assets
    var exportFolder = getFilePath(context).replace(/\.sketch$/, "-assets/");
    var tempFolder = getPluginPath(context) + ".temp/";

    // Reset exportDpis and qualifiers
    resetExportConfig(page.name());

    // Get all exportable
    var assets = [];
    var assetsIds = [];

    if (selection.count() > 0) {
        for (var i = 0; i < selection.count(); i ++) {
            addAssets(selection[i], assets, assetsIds);
        }
    } else {
        addAssets(page, assets, assetsIds);
    }

    if (assetsIds.length > 0) {

        // Save document
        doc.saveDocument(nil);

        for (var i = 0; i < exportConfig.length; i++) {

            var scale = exportConfig[i].scale;
            var qualifier = exportConfig[i].qualifier;

            if (!fileExists(exportFolder + "drawable-" + qualifier)) {
                mkdir(exportFolder + "drawable-" + qualifier);
            }

            // Export to tempFolder
            var formats = "png";
            var useIdForName = "yes";
            sketchtoolExport(
                "slices",
                currentFile,
                exportConfig[i].scale,
                formats,
                assetsIds,
                useIdForName,
                tempFolder,
                function(success, message) {
                    if (success == true) {

                        // Move to exportFolder and rename
                        for(var j = 0; j < assets.length; j++) {
                            var oldName = assets[j]["id"];
                            var newName = assets[j]["name"] + ".png";
                            mv(
                                tempFolder + oldName + scaleToSuffix(scale) + ".png",
                                exportFolder + "drawable-" + qualifier + "/" + newName
                            );
                        }

                        toast(context, "Export asset to \"" + exportFolder + "\". Done!");
                    }
                }
            );

            // log(">>> Export slices " + currentFile + " -scales=" + exportConfig[i].scale + " -out=" + tempFolder);

        }
    } else {
        toast(context, "No any exportable layer or select a unexportable layer.");
    }
}

function addAssets(parent, assets, assetsIds) {
    var childrens = parent.children();
    for (var j = 0; j < childrens.count(); j++) {
        var children = childrens[j];
        // Slice and exportable layer but no #9patch
        if (children.isLayerExportable() && children.name() != "#9patch") {
            assets.push({
                "id": children.objectID(),
                "name": androidResName(children.name())
            });
            assetsIds.push(children.objectID());

            // log("id:" + children.objectID() + ", name:" + androidResName(children.name()));
        }
    }
}
