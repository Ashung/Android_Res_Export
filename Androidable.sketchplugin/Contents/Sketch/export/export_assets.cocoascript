//
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com

@import "../lib/common.js";

var onRun = function(context) {

    if (!getFilePath(context)) {
        return;
    }

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    var currentFile = getFilePath(context);
    var exportFolder = getFilePath(context).replace(/\.sketch$/, "-assets/");
    var tempFolder = getPluginPath(context) + ".temp/";

    // Reset exportDpis and qualifiers
    resetExportConfig(page.name());

    // Get all exportable
    var assets = [];
    var assetsIds = [];

    if (selection.count() > 0) {
        for (var i = 0; i < selection.count(); i ++) {
            addAssets(selection[i], assets, assetsIds);
        }
    } else {
        addAssets(page, assets, assetsIds);
    }

    if (assetsIds.length == 0) {
        toast(context, "No any exportable layer or select a unexportable layer.");
        return;
    }

    doc.saveDocument(nil);

    log(tempFolder);

    for (var i = 0; i < exportConfig.length; i++) {

        var scale = exportConfig[i].scale;
        var qualifier = exportConfig[i].qualifier;

        if (!fileExists(exportFolder + "drawable-" + qualifier)) {
            mkdir(exportFolder + "drawable-" + qualifier);
        }

        var doExportAssets = false;
        var failureMoveFileCounts = 0;

        // Export to tempFolder
        var formats = "png";
        var useIdForName = "yes";
        sketchtoolExport(
            "slices",
            currentFile,
            exportConfig[i].scale,
            formats,
            assetsIds,
            useIdForName,
            tempFolder,
            function(success, message) {
                if (success == true) {
                    doExportAssets = true;
                }
            }
        );

        if (doExportAssets) {
            // Move to exportFolder and rename
            for(var j = 0; j < assets.length; j++) {
                var oldName = assets[j]["id"];
                var newName = assets[j]["name"] + ".png";
                mv(
                    tempFolder + oldName + scaleToSuffix(scale) + ".png",
                    exportFolder + "drawable-" + qualifier + "/" + newName,
                    function(success, message) {
                        if (!success) {
                            toast(context, message);
                            failureMoveFileCounts ++;
                        }
                    }
                );
            }
        }

        if (failureMoveFileCounts == 0) {
            toast(context, "Export asset to \"" + exportFolder + "\". Done!");
        } else {
            toast(context, "Some file export failure. " + failureMoveFileCounts + "/" + exportConfig.length * assets.length);
        }

    }
}

function addAssets(parent, assets, assetsIds) {
    var childrens = parent.children();
    for (var j = 0; j < childrens.count(); j++) {
        var children = childrens[j];
        // Slice and exportable layer but no #9patch
        if (children.isLayerExportable() && children.name() != "#9patch") {
            assets.push({
                "id": children.objectID(),
                "name": androidResName(children.name())
            });
            assetsIds.push(children.objectID());
            // log("id:" + children.objectID() + ", name:" + androidResName(children.name()));
        }
    }
}
