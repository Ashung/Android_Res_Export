//
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com

@import "../lib/common.js";

var onRun = function(context) {

    if (!fileExists(convert)) {
        alert(
            "You have not install ImageMagick.",
            "Export Android nine-patch image feature depend on the ImageMagick library.\n\nInstall use MacPorts:\n$ sudo port install ImageMagick\nor use HomeBrew:\n$ brew install ImageMagick"
        );
        return;
    }

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    // Export folder: <file name>-assets
    if (!getFilePath(context)) {
        return;
    } else {
        var currentFile = getFilePath(context);
        var exportFolder = getFilePath(context).replace(/\.sketch$/, "-assets");
    }

    // Reset exportDpis and qualifiers
    resetExportConfig(page.name());

    // Get all exportable
    var ninePatchImages = [];
    var ninePatchPatchIds = [];
    var ninePatchContentIds = [];

    if(selection.count() > 0) {
        for(var i = 0; i < selection.count(); i ++) {
            if(selection[i].className() == "MSLayerGroup") {
                var imageName = selection[i].name();
                var patchId = "";
                var contentId = "";
                var width = "";
                var height = "";

                for(var j = 0; j < selection[i].children().count(); j++) {
                    var children = selection[i].children()[j];
                    if(children.name() == "patch" && children.className() == "MSLayerGroup") {
                        patchId = children.objectID();
                    }
                    if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                        contentId = children.objectID();
                        width = children.frame().width();
                        height = children.frame().height();
                    }
                }

                if(patchId != "" && contentId != "") {
                    ninePatchImages.push({
                        "name": imageName,
                        "patchId": patchId,
                        "contentId": contentId,
                        "width": width,
                        "height": height
                    });
                    ninePatchPatchIds.push(patchId);
                    ninePatchContentIds.push(contentId);
                    // log("name:" + imageName + ", patchId:" + patchId + ", contentId:" + contentId);
                }
            }
        }
    } else {
        for(var i = 0; i < page.children().count(); i++) {
            var children = page.children()[i];

            var imageName = "";
            var patchId = "";
            var contentId = "";
            var width = "";
            var height = "";

            if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                contentId = children.objectID();
                width = children.frame().width();
                height = children.frame().height();

                var parent = children.parentGroup().parentGroup();
                for(var j = 0; j < parent.layers().array().count(); j++) {
                    if(parent.layers().array()[j].name() == "patch") {
                        patchId = parent.layers().array()[j].objectID();
                    }
                    if(parent.layers().array()[j].name() == "content") {
                        imageName = parent.name();
                    }
                }
            }

            if(imageName != "" && patchId != "" && contentId != "") {
                ninePatchImages.push({
                    "name": imageName,
                    "patchId": patchId,
                    "contentId": contentId,
                    "width": width,
                    "height": height
                });
                ninePatchPatchIds.push(patchId);
                ninePatchContentIds.push(contentId);
            }

        }
    }

    // log(ninePatchImages);

    if (ninePatchPatchIds.length > 0 && ninePatchContentIds.length > 0) {

        // Save document
        doc.saveDocument(nil);

        // Export ninePatch Patch MDPI
        var formats = "png";
        var useIdForName = "yes";
        sketchtoolExport(
            "layers",
            currentFile,
            "1",
            formats,
            ninePatchPatchIds,
            useIdForName,
            exportFolder
        );

        for (var i = 0; i < exportConfig.length; i++) {

            var scale = exportConfig[i].scale;
            var qualifier = exportConfig[i].qualifier;
            mkdir(exportFolder, "drawable-" + qualifier);

            // Export ninePatch Content
            sketchtoolExport(
                "slices",
                currentFile,
                exportConfig[i].scale,
                formats,
                ninePatchContentIds,
                useIdForName,
                exportFolder
            );



            for(var j = 0; j < ninePatchImages.length; j++) {
                var contentId = ninePatchImages[j]["contentId"];
                var content = contentId + scaleToSuffix(scale) + ".png";
                var temp = contentId + "_temp" + scaleToSuffix(scale) + ".png";
                var patchId = ninePatchImages[j]["patchId"];
                var patch = patchId + ".png";
                var newName = ninePatchImages[j]["name"] + ".9.png";
                var width = ninePatchImages[j]["width"];
                var height = ninePatchImages[j]["height"];

                // Run only once
                if (i == 0) {
                    createMdpiPatchLines(
                        exportFolder,
                        width,
                        height,
                        patchId
                    );
                    rm(exportFolder, patch);
                }

                createNinePath(exportFolder, scale, scaleToSuffix(scale), width, height, contentId, patchId);
                rm(exportFolder, content);

                // Rename assets
                mv(
                    exportFolder,
                    temp,
                    "drawable-" + qualifier + "/" + newName
                );
            }
        }

        // Remove patch lines
        for(var i = 0; i < ninePatchPatchIds.length; i++) {
            var patchId = ninePatchPatchIds[i];
            var patchTop = patchId + "_top.png";
            var patchRight = patchId + "_right.png";
            var patchBottom = patchId + "_bottom.png";
            var patchLeft = patchId + "_left.png";
            rm(exportFolder, patchTop);
            rm(exportFolder, patchRight);
            rm(exportFolder, patchBottom);
            rm(exportFolder, patchLeft);
        }

        toast(context, "Export to \"" + exportFolder + "\". Done!");

    }
}
