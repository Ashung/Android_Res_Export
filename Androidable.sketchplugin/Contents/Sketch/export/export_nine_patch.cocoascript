//
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com

@import "../lib/common.js";

var onRun = function(context) {

    if (!convert) {
        alert(
            "You have not install ImageMagick.",
            "Export Android nine-patch image feature depend on the ImageMagick library.\n\n" +
            "Install use HomeBrew:\n" +
            "$ brew install ImageMagick\n\n" +
            "or use MacPorts:\n" +
            "$ sudo port install ImageMagick"
        );
        return;
    }

    if (!getFilePath(context)) {
        return;
    }

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    var currentFile = getFilePath(context);
    var exportFolder = getFilePath(context).replace(/\.sketch$/, "-assets/");
    var tempFolder = getPluginPath(context) + ".temp/";
    var reportFile = exportFolder + "/report.txt";

    // Reset exportDpis and qualifiers
    resetExportConfig(page.name());

    // Get all exportable
    var ninePatchImages = [];
    var ninePatchPatchIds = [];
    var ninePatchContentIds = [];
    var ninePatchNames = [];
    var reportInfo = [];

    if(selection.count() > 0) {
        for(var i = 0; i < selection.count(); i ++) {
            if(selection[i].className() == "MSLayerGroup") {
                var imageName = androidResName(selection[i].name());
                var patchId = "";
                var contentId = "";
                var width = "";
                var height = "";

                for(var j = 0; j < selection[i].children().count(); j++) {
                    var children = selection[i].children()[j];
                    if(children.name() == "patch" && children.className() == "MSLayerGroup") {
                        patchId = children.objectID();
                    }
                    if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                        contentId = children.objectID();
                        width = children.frame().width();
                        height = children.frame().height();
                    }
                }

                if(patchId != "" && contentId != "") {
                    ninePatchImages.push({
                        "name": imageName,
                        "patchId": patchId,
                        "contentId": contentId,
                        "width": width,
                        "height": height
                    });
                    ninePatchPatchIds.push(patchId);
                    ninePatchContentIds.push(contentId);
                    // Check name duplicate
                    if (imageName != selection[i].name()) {
                        reportInfo.push('Changed layer name: ' + selection[i].name() + ' -> ' + imageName);
                    }
                    if (ninePatchNames.indexOf(imageName) >= 0) {
                        reportInfo.push('Duplicate layer name: ' + selection[i].name());
                    }
                    ninePatchNames.push(imageName);
                }
            }
        }
    } else {
        for(var i = 0; i < page.children().count(); i++) {
            var children = page.children()[i];

            var imageName = "";
            var patchId = "";
            var contentId = "";
            var width = "";
            var height = "";

            if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                contentId = children.objectID();
                width = children.frame().width();
                height = children.frame().height();

                var parent = children.parentGroup().parentGroup();
                for(var j = 0; j < parent.layers().length; j++) {
                    if(parent.layers()[j].name() == "patch") {
                        patchId = parent.layers()[j].objectID();
                    }
                    if(parent.layers()[j].name() == "content") {
                        imageName = androidResName(parent.name());
                    }
                }
            }

            if(imageName != "" && patchId != "" && contentId != "") {
                ninePatchImages.push({
                    "name": imageName,
                    "patchId": patchId,
                    "contentId": contentId,
                    "width": width,
                    "height": height
                });
                ninePatchPatchIds.push(patchId);
                ninePatchContentIds.push(contentId);
                // Check name duplicate
                if (imageName != parent.name()) {
                    reportInfo.push('Changed layer name: ' + parent.name() + ' -> ' + imageName);
                }
                if (ninePatchNames.indexOf(imageName) >= 0) {
                    reportInfo.push('Duplicate layer name: ' + parent.name());
                }
                ninePatchNames.push(imageName);
            }
        }
    }

    if (ninePatchPatchIds.length == 0 && ninePatchContentIds.length == 0) {
        toast(context, "No nine-patch found.")
        return;
    }

    // Save document
    doc.saveDocument(nil);

    var doneExportedMdpiPatch = false;
    var doneCreateMdpiPatchLines = false;
    var doneExportedNinePathContent = false;
    var doneCreateNinePath = false;
    var failureMoveFileCounts = 0;

    // Export ninePatch Patch MDPI
    var formats = "png";
    var useIdForName = "yes";
    sketchtoolExport(
        "layers",
        currentFile,
        "1",
        formats,
        ninePatchPatchIds,
        useIdForName,
        tempFolder,
        function(success1, message1) {
            if (success1 == true) {
                doneExportedMdpiPatch = true;
            }
        }
    );

    if (doneExportedMdpiPatch) {
        for (var i = 0; i < exportConfig.length; i++) {

            var scale = exportConfig[i].scale;
            var qualifier = exportConfig[i].qualifier;

            if (!fileExists(exportFolder + "drawable-" + qualifier)) {
                mkdir(exportFolder + "drawable-" + qualifier);
            }

            // Export ninePatch Content
            sketchtoolExport(
                "slices",
                currentFile,
                exportConfig[i].scale,
                formats,
                ninePatchContentIds,
                useIdForName,
                tempFolder,
                function(success, message) {
                    if (success == true) {
                        doneExportedNinePathContent = true;

                        for(var j = 0; j < ninePatchImages.length; j++) {
                            var contentId = ninePatchImages[j]["contentId"];
                            var content = contentId + scaleToSuffix(scale) + ".png";
                            var temp = contentId + "_temp" + scaleToSuffix(scale) + ".png";
                            var patchId = ninePatchImages[j]["patchId"];
                            var patch = patchId + ".png";
                            var newName = ninePatchImages[j]["name"] + ".9.png";
                            var width = ninePatchImages[j]["width"];
                            var height = ninePatchImages[j]["height"];

                            // Create MDPI 9-patch lines, run only once
                            if (i == 0) {
                                createMdpiPatchLines(
                                    tempFolder,
                                    width,
                                    height,
                                    patchId,
                                    function(success2, message2) {
                                        if (success2 == true) {
                                            rm(tempFolder + patch);
                                            doneCreateMdpiPatchLines = true;
                                        }
                                    }
                                );
                            }

                            createNinePath(
                                tempFolder,
                                scale,
                                scaleToSuffix(scale),
                                width,
                                height,
                                contentId,
                                patchId,
                                function(success3, message3) {
                                    if (success3 == true) {
                                        rm(tempFolder + content);
                                        // Rename assets
                                        mv(
                                            tempFolder + temp,
                                            exportFolder + "drawable-" + qualifier + "/" + newName,
                                            function(success, message) {
                                                if (!success) {
                                                    toast(context, message);
                                                    failureMoveFileCounts ++;
                                                }
                                            }
                                        );
                                        doneCreateNinePath = true;
                                    }
                                }
                            );
                        }
                    }
                }
            );
        }

        // Remove patch lines
        if (doneCreateMdpiPatchLines) {
            for(var i = 0; i < ninePatchPatchIds.length; i++) {
                var patchId = ninePatchPatchIds[i];
                var patchTop = patchId + "_top.png";
                var patchRight = patchId + "_right.png";
                var patchBottom = patchId + "_bottom.png";
                var patchLeft = patchId + "_left.png";
                rm(tempFolder + patchTop);
                rm(tempFolder + patchRight);
                rm(tempFolder + patchBottom);
                rm(tempFolder + patchLeft);
            }
        }

        // Report file
        if (reportInfo.length > 0) {
            writeFile(reportFile, reportInfo.toString().replace(/,/g, "\n"));
        } else {
            if (fileExists(reportFile)) {
                rm(reportFile);
            }
        }

        // Message
        if (failureMoveFileCounts == 0 && doneExportedMdpiPatch && doneCreateMdpiPatchLines && doneExportedNinePathContent && doneCreateNinePath) {
            toast(context, "Export 9-patch to \"" + exportFolder + "\". Done!");
        } else {
            toast(context, "Some file export failure. " + failureMoveFileCounts + "/" + exportConfig.length);
        }

    }
}
