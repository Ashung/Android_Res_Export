//
// Author: Ashung Hung
// Email: Ashung.hung@gmail.com

@import "../lib/common.js";

var onRun = function(context) {

    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;


    // Export folder: <file name>-assets
    if (!getFilePath(context)) {
        return;
    } else {
        var currentFile = getFilePath(context);
        var exportFolder = getFilePath(context).replace(/\.sketch$/, "-assets");
    }

    // Reset exportDpis and qualifiers
    resetExportConfig(page.name());

    // Get all exportable
    var ninePatchImages = [];
    var ninePatchPatchIds = [];
    var ninePatchContentIds = [];

    if(selection.count() > 0) {
        for(var i = 0; i < selection.count(); i ++) {
            if(selection[i].className() == "MSLayerGroup") {
                var imageName = selection[i].name();
                var patchId = "";
                var contentId = "";

                for(var j = 0; j < selection[i].children().count(); j++) {
                    var children = selection[i].children()[j];
                    if(children.name() == "patch" && children.className() == "MSLayerGroup") {
                        patchId = children.objectID();
                    }
                    if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                        contentId = children.objectID();
                    }
                }

                if(patchId != "" && contentId != "") {
                    ninePatchImages.push({
                        "name": imageName,
                        "patchId": patchId,
                        "contentId": contentId
                    });
                    ninePatchPatchIds.push(patchId);
                    ninePatchContentIds.push(contentId);
                    // log("name:" + imageName + ", patchId:" + patchId + ", contentId:" + contentId);
                }
            }
        }
    } else {
        for(var i = 0; i < page.children().count(); i++) {
            var children = page.children()[i];

            var imageName = "";
            var patchId = "";
            var contentId = "";

            if(children.name() == "#9patch" && children.className() == "MSSliceLayer") {
                contentId = children.objectID();

                var parent = children.parentGroup().parentGroup();
                for(var j = 0; j < parent.layers().array().count(); j++) {
                    if(parent.layers().array()[j].name() == "patch") {
                        patchId = parent.layers().array()[j].objectID();
                    }
                    if(parent.layers().array()[j].name() == "content") {
                        imageName = parent.name();
                    }
                }
            }

            if(imageName != "" && patchId != "" && contentId != "") {
                ninePatchImages.push({
                    "name": imageName,
                    "patchId": patchId,
                    "contentId": contentId
                });
                ninePatchPatchIds.push(patchId);
                ninePatchContentIds.push(contentId);
            }

        }
    }

    if (ninePatchPatchIds.length > 0 && ninePatchContentIds.length > 0) {

        // Save document
        doc.saveDocument(nil);

        // Export ninePatch Patch
        sketchtoolExport(
            "layers",
            currentFile,
            "1",
            ninePatchPatchIds.toString(),
            exportFolder
        );

        for (var i = 0; i < exportConfig.length; i++) {

            var scale = exportConfig[i].scale;
            var qualifier = exportConfig[i].qualifier;
            mkdir(exportFolder, "drawable-" + qualifier);

            // Export ninePatch Content
            sketchtoolExport(
                "slices",
                currentFile,
                exportConfig[i].scale,
                ninePatchContentIds.toString(),
                exportFolder
            );



            
        }




    }

    // log(ninePatchImages);

    // log(selectFolderDialog(context, "Where do you want to export the assets?"));

    // log(currentFile);

    log("......" + currentFile);
    log("......" + getPluginPath(context));


    // runCommand("/bin/sh " + pluginPath + "/shell/test.sh")

}
